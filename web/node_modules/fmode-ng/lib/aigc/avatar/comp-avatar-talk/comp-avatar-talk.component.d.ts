import { AfterViewInit, ElementRef, OnDestroy } from '@angular/core';
import { FmodeVoiceService } from '../../voice';
import { ChatService } from '../../service-fmai/service-chat';
import { FmodeAvatarRoleComp } from '../interface-avatar-role';
import { NavController, Platform } from "@ionic/angular";
import { ActivatedRoute, Router } from '@angular/router';
import * as Parse from "parse";
import * as i0 from "@angular/core";
export declare class CompAvatarTalkComponent implements AfterViewInit, OnDestroy {
    voiceServ: FmodeVoiceService;
    private platform;
    private router;
    private navCtrl;
    private route;
    chatServ: ChatService;
    avatarComp: FmodeAvatarRoleComp;
    roleId: string;
    avatarRole: Parse.Object;
    /**
     * 开始讲话方式：click点击开始/点击结束 press按住讲话/松开结束
     * @default click
     */
    talkMode: "click" | "press";
    talkTips: string;
    constructor(voiceServ: FmodeVoiceService, platform: Platform, router: Router, navCtrl: NavController, route: ActivatedRoute, chatServ: ChatService);
    /**
     * 初始化录音转录服务
     * @desc
     * 根据数字角色对话状态，设计语音转录各事件处理过程
     * 嵌入提示音
     * 嵌入动画
     * 嵌入唤醒词切换逻辑
     */
    initVoiceSevice(): void;
    ngOnInit(): void;
    ngOnDestroy(): void;
    goBack(): void;
    loadAvatarRole(roleId: any): Promise<void>;
    player: HTMLAudioElement;
    playMusic(action: any): void;
    ngAfterViewInit(): void;
    aiRespComp: ElementRef;
    listenDivChange(): void;
    scrollToBottom(comp: ElementRef): void;
    initAvatar(): Promise<void>;
    /**
     * AI响应内容
     */
    aiResponseText: string;
    /**
     * 发送消息逻辑
     */
    sendMessage(): void;
    /**
     * ASR - 唤醒词
     */
    startASRAwake(): Promise<void>;
    /**
     * TTS - 语音合成
     *
     */
    testTTS(sentence?: any): void;
    testXunfeiTTS(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<CompAvatarTalkComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<CompAvatarTalkComponent, "app-comp-avatar-talk", never, { "talkMode": "talkMode"; }, {}, never, never, true, never>;
}
