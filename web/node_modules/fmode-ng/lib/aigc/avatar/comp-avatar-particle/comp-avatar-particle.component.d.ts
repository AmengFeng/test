import { AfterViewInit, ElementRef } from '@angular/core';
/**
 * npm i -S @babylonjs/core
 * npm i -S @babylonjs/loaders
 */
import * as BABYLON from '@babylonjs/core';
import '@babylonjs/loaders';
import { AvatarRole } from './avatar.role';
import * as i0 from "@angular/core";
export declare class CompAvatarParticleComponent implements AfterViewInit {
    private elementRef;
    renderCanvas: ElementRef;
    private canvas;
    private engine;
    private scene;
    mainCamera: BABYLON.ArcRotateCamera | BABYLON.VRDeviceOrientationArcRotateCamera | undefined;
    constructor(elementRef: ElementRef);
    ngAfterViewInit(): void;
    currentRole: AvatarRole;
    createScene(): Promise<void>;
    isWebVR: boolean;
    createCamera(): BABYLON.ArcRotateCamera;
    mainMesh: BABYLON.AbstractMesh | undefined;
    pointsCloud: BABYLON.PointsCloudSystem;
    pointsMesh: BABYLON.Mesh;
    createCloudPoints(): Promise<void>;
    playAnimation(name: any): void;
    cloudAnim(options?: {
        breathing: boolean;
        rotateSpeed: number;
    }): void;
    animMap: {
        [key: string]: BABYLON.Animation;
    };
    createSphere(): BABYLON.Mesh;
    createParticle(): Promise<void>;
    setCameraToMeshCenter(camera: BABYLON.ArcRotateCamera | undefined, mesh: BABYLON.AbstractMesh): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<CompAvatarParticleComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<CompAvatarParticleComponent, "fm-avatar-role-particle", never, {}, {}, never, never, true, never>;
}
